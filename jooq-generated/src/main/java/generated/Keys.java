/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.InvoicePositions;
import generated.tables.Invoices;
import generated.tables.Organisations;
import generated.tables.Products;
import generated.tables.records.InvoicePositionsRecord;
import generated.tables.records.InvoicesRecord;
import generated.tables.records.OrganisationsRecord;
import generated.tables.records.ProductsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<InvoicePositionsRecord> INVOICE_POSITIONS_PKEY = Internal.createUniqueKey(InvoicePositions.INVOICE_POSITIONS, DSL.name("invoice_positions_pkey"), new TableField[] { InvoicePositions.INVOICE_POSITIONS.ID }, true);
    public static final UniqueKey<InvoicesRecord> INVOICES_PKEY = Internal.createUniqueKey(Invoices.INVOICES, DSL.name("invoices_pkey"), new TableField[] { Invoices.INVOICES.ID }, true);
    public static final UniqueKey<OrganisationsRecord> ORGANISATIONS_BANK_ACCOUNT_KEY = Internal.createUniqueKey(Organisations.ORGANISATIONS, DSL.name("organisations_bank_account_key"), new TableField[] { Organisations.ORGANISATIONS.BANK_ACCOUNT }, true);
    public static final UniqueKey<OrganisationsRecord> ORGANISATIONS_INN_KEY = Internal.createUniqueKey(Organisations.ORGANISATIONS, DSL.name("organisations_inn_key"), new TableField[] { Organisations.ORGANISATIONS.INN }, true);
    public static final UniqueKey<OrganisationsRecord> ORGANISATIONS_PKEY = Internal.createUniqueKey(Organisations.ORGANISATIONS, DSL.name("organisations_pkey"), new TableField[] { Organisations.ORGANISATIONS.ID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PKEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pkey"), new TableField[] { Products.PRODUCTS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoicePositionsRecord, InvoicesRecord> INVOICE_POSITIONS__INVOICE_POSITIONS_INVOICE_ID_FKEY = Internal.createForeignKey(InvoicePositions.INVOICE_POSITIONS, DSL.name("invoice_positions_invoice_id_fkey"), new TableField[] { InvoicePositions.INVOICE_POSITIONS.INVOICE_ID }, Keys.INVOICES_PKEY, new TableField[] { Invoices.INVOICES.ID }, true);
    public static final ForeignKey<InvoicePositionsRecord, ProductsRecord> INVOICE_POSITIONS__INVOICE_POSITIONS_PRODUCT_ID_FKEY = Internal.createForeignKey(InvoicePositions.INVOICE_POSITIONS, DSL.name("invoice_positions_product_id_fkey"), new TableField[] { InvoicePositions.INVOICE_POSITIONS.PRODUCT_ID }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<InvoicesRecord, OrganisationsRecord> INVOICES__INVOICES_ORGANISATION_ID_FKEY = Internal.createForeignKey(Invoices.INVOICES, DSL.name("invoices_organisation_id_fkey"), new TableField[] { Invoices.INVOICES.ORGANISATION_ID }, Keys.ORGANISATIONS_PKEY, new TableField[] { Organisations.ORGANISATIONS.ID }, true);
}
